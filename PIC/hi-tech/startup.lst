

HI-TECH Software PICC Macro Assembler V9.60PL3
                                                      Thu Dec  4 22:51:03 2008


     1                           
     2                           	; HI-TECH C PRO for the PIC10/12/16 MCU family
                                  V9.60PL3
     3                           	; Copyright (C) 1984-2008 HI-TECH Software
     4                           
     5                           	; Auto-generated runtime startup code for fina
                                 l link stage.
     6                           
     7                           	;
     8                           	; Compiler options:
     9                           	;
    10                           	; --chip=16F690 code.C
    11                           	;
    12                           
    13                           
    14                           	processor	16F690
    15                           
    16                           	global	_main,start,_exit,reset_vec
    17                           	fnroot	_main
    18                           	psect	config,class=CONFIG,delta=2
    19                           	psect	idloc,class=IDLOC,delta=2
    20                           	psect	rbss_0,class=BANK0,space=1
    21                           	psect	rbss_1,class=BANK1,space=1
    22                           	psect	rbss_2,class=BANK2,space=1
    23                           	psect	rbss_3,class=BANK3,space=1
    24                           	psect	rdata_0,class=BANK0,space=1
    25                           	psect	rdata_1,class=BANK1,space=1
    26                           	psect	rdata_2,class=BANK2,space=1
    27                           	psect	rdata_3,class=BANK3,space=1
    28                           	psect	nvram,class=BANK0,space=1
    29                           	psect	nvram_1,class=BANK1,space=1
    30                           	psect	nvram_2,class=BANK2,space=1
    31                           	psect	nvram_3,class=BANK3,space=1
    32                           	psect	nvbit_0,class=BANK0,bit,space=1
    33                           	psect	nvbit_1,class=BANK1,bit,space=1
    34                           	psect	nvbit_2,class=BANK2,bit,space=1
    35                           	psect	nvbit_3,class=BANK3,bit,space=1
    36                           	psect	temp,ovrld,class=BANK0,space=1
    37                           	psect	struct,ovrld,class=BANK0,space=1
    38                           	psect	code,class=CODE,delta=2
    39                           	psect	rbit_0,class=BANK0,bit,space=1
    40                           	psect	ptbit_0,class=BANK0,bit,space=1
    41                           	psect	rbit_1,class=BANK1,bit,space=1
    42                           	psect	rbit_2,class=BANK2,bit,space=1
    43                           	psect	rbit_3,class=BANK3,bit,space=1
    44                           	psect	strings,class=CODE,delta=2,reloc=256
    45                           	psect	pstrings,class=CODE,delta=2
    46                           	psect	powerup,class=CODE,delta=2
    47                           	psect	reset_vec,class=CODE,delta=2
    48                           	psect	maintext,class=CODE,delta=2
    49  0000                     	C	set	0
    50  0000                     	Z	set	2
    51  0000                     	PCL	set	2
    52  0000                     	INDF	set	0
    53                           
    54                           	psect	fnautoc,class=COMMON,space=1
    55                           	psect	common,class=COMMON,space=1
    56                           	psect	fnauto0,class=BANK0,space=1
    57                           	psect	fnauto1,class=BANK1,space=1
    58                           	psect	fnauto2,class=BANK2,space=1
    59  0000                     	STATUS	equ	3
    60  0000                     	PCLATH	equ	0Ah
    61                           
    62                           	psect	eeprom_data,class=EEDATA,delta=2,space=2
    63                           	psect	idata,class=CODE,delta=2
    64                           	psect	idata_0,class=CODE,delta=2
    65                           	psect	idata_1,class=CODE,delta=2
    66                           	psect	idata_2,class=CODE,delta=2
    67                           	psect	idata_3,class=CODE,delta=2
    68                           	psect	intcode,class=CODE,delta=2
    69                           	psect	intret,class=CODE,delta=2
    70                           	psect	intentry,class=CODE,delta=2
    71                           	global	intlevel0,intlevel1,intlevel2, intlevel
                                 3, intlevel4, intlevel5
    72  0000                     intlevel0:
    73  0000                     intlevel1:
    74  0000                     intlevel2:
    75  0000                     intlevel3:
    76  0000                     intlevel4:
    77  0000                     intlevel5:
    78                           	psect	intsave,class=BANK0,space=1
    79                           	psect	intsave_1,class=BANK1,space=1
    80                           	psect	intsave_2,class=BANK2,space=1
    81                           	psect	intsave_3,class=BANK3,space=1
    82                           	psect	init,class=CODE,delta=2
    83                           	psect	init23,class=CODE,delta=2
    84                           	psect	text,class=CODE,delta=2
    85                           	psect	end_init,class=CODE,delta=2
    86                           	psect	clrtext,class=CODE,delta=2
    87                           	psect	float_text0,class=CODE,delta=2,size=2048
    88                           	psect	float_text1,class=CODE,delta=2,size=2048
    89                           	psect	float_text2,class=CODE,delta=2,size=2048
    90                           	psect	float_text3,class=CODE,delta=2,size=2048
    91                           	psect	float_text4,class=CODE,delta=2,size=2048
    92  0000                     	FSR	set	4
    93                           
    94                           	psect	reset_vec
    95  0000                     reset_vec:
    96                           	; No powerup routine
    97                           	; No interrupt routine
    98                           
    99                           
   100                           	psect	init
   101  0000                     start
   102  0000                     _exit
   103  0000                     btemp	equ	0x70		;temporary memory only used by 
                                 the following
   104  0000                     FSR	set	4
   105  0000                     INDF	set	0
   106  0000                     PCLATH	set	0Ah
   107  0000                     PC	set	2
   108                           global btemp, __Lramdata, __Lidata, __Hramdata
   109  0000  3078               movlw	low(__Lramdata)
   110  0001  0084               movwf	FSR
   111  0002  3007               movlw	high(__Lidata)
   112  0003  00F0               movwf	btemp
   113  0004  30FC               movlw	low(__Lidata)
   114  0005  00F1               movwf	btemp+1
   115  0006                     copyloop:
   116  0006  2011               fcall fetch
   117  0007  0080               movwf	INDF
   118  0008  0A84               incf	FSR,f
   119  0009  0804               movf	FSR,w
   120  000A  3A7C               xorlw	low(__Hramdata)
   121  000B  1903               btfsc	STATUS,2
   122  000C  2815               goto	done_copy
   123  000D  0AF1               incf	btemp+1,f
   124  000E  1903               btfsc	STATUS,2
   125  000F  0AF0               incf	btemp,f
   126  0010  2806               goto copyloop
   127  0011                     fetch:
   128  0011  0870               movf	btemp,w
   129  0012  008A               movwf	PCLATH
   130  0013  0871               movf	btemp+1,w
   131  0014  0082               movwf	PC
   132  0015                     done_copy:
   133                           
   134                           ;----------------------------------------------
                                 ---------------------------------
   135                           ;		Clear (zero) uninitialized global variables
   136                           
   137                           ;	No RAM objects to clear in bank 0
   138                           ;	No RAM objects to clear in bank 1
   139                           ;	No RAM objects to clear in bank 2
   140                           ;	No RAM objects to clear in bank 3
   141                           ;	2 bytes of RAM objects in common bank to zero
   142                           
   143                           	psect	init
   144  0015  1783               	bsf	STATUS,7		;select indirect bank 2/3
   145                           	global	__Lcommon
   146  0016  307C               	movlw	low(__Lcommon)		;load the low address in
                                 to FSR
   147  0017  0084               	movwf	FSR
   148  0018  307E               	movlw	low(__Lcommon+2)		;load the high address
                                 +1 into W
   149  0019  118A  201E  118A   	fcall	clear_ram		;go and zero that range of ad
                                 dresses
   150                           
   151                           	psect	clrtext,class=CODE,delta=2
   152                           	global	clear_ram
   153                           ;	Called with FSR containing the base address, 
                                 and
   154                           ;	W with the last address+1
   155  001E                     clear_ram:
   156  001E  0064               	clrwdt			;clear the watchdog before getting in
                                 to this loop
   157  001F                     clrloop:
   158  001F  0180               	clrf	INDF		;clear RAM location pointed to by F
                                 SR
   159  0020  0A84               	incf	FSR,f		;increment pointer to next locatio
                                 n
   160  0021  0604               	xorwf	FSR,w		;XOR with final address
   161  0022  1903               	btfsc	STATUS,2	;have we reached the end yet?
   162  0023  3400               	retlw	0		;all done for this bank, return
   163  0024  0604               	xorwf	FSR,w		;XOR again to restore value
   164  0025  281F               	goto	clrloop		;go and do the next byte
   165                           
   166                           
   167                           ;----------------------------------------------
                                 ---------------------------------
   168                           	psect	end_init
   169  001C  118A  2826         	ljmp _main


HI-TECH Software PICC Macro Assembler V9.60PL3
Symbol Table                                          Thu Dec  4 22:51:03 2008

         PC 0002   __Lramdata 0078          FSR 0004         INDF 0000  
      _main 0026        _exit 0000        fetch 0011        btemp 0070  
      start 0000    clear_ram 001E       PCLATH 000A       STATUS 0003  
  done_copy 0015    intlevel0 0000    intlevel1 0000    intlevel2 0000  
  intlevel3 0000    intlevel4 0000    intlevel5 0000     __Lidata 07FC  
  reset_vec 0000     copyloop 0006      clrloop 001F   __Hramdata 007C  
  __Lcommon 007C  
